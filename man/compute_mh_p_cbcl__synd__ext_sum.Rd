% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scores_mh_aseba.R
\name{compute_mh_p_cbcl__synd__ext_sum}
\alias{compute_mh_p_cbcl__synd__ext_sum}
\title{Compute "Child Behavior Checklist [Parent] (Syndrome Scale -
Externalizing): Sum"}
\usage{
compute_mh_p_cbcl__synd__ext_sum(
  data,
  name = "mh_p_cbcl__synd__ext_sum",
  max_na = 2,
  exclude = c("777", "999"),
  combine = TRUE
)
}
\arguments{
\item{data}{tbl. Data frame containing the columns to be summarized.}

\item{name}{character. Name of the summary score column.}

\item{max_na}{numeric, positive whole number. Number of missing items
allowed. \code{NULL} means no limit.}

\item{exclude}{character vector. Values to be excluded from the summary score.}

\item{combine}{logical. If \code{TRUE} (default), the summary score is
is appended as a new column to the input data frame. If \code{FALSE}, the
summary score is returned as a separate one-column data frame.}
}
\value{
tbl. see \code{combine}.
}
\description{
Computes the summary score \code{mh_p_cbcl__synd__ext_sum}
Child Behavior Checklist [Parent] (Syndrome Scale - Externalizing):
Sum
\itemize{
\item \emph{Summarized variables:}
\itemize{
\item \code{mh_p_cbcl__rule_001}
\item \code{mh_p_cbcl__rule__cond_010}
\item \code{mh_p_cbcl__rule_006}
\item \code{mh_p_cbcl__rule__cond_011}
\item \code{mh_p_cbcl__rule__cond_001}
\item \code{mh_p_cbcl__rule__cond_002}
\item \code{mh_p_cbcl__rule__cond_003}
\item \code{mh_p_cbcl__rule__cond_004}
\item \code{mh_p_cbcl__rule_002}
\item \code{mh_p_cbcl__rule__cond_005}
\item \code{mh_p_cbcl__rule__cond_006}
\item \code{mh_p_cbcl__rule_003}
\item \code{mh_p_cbcl__rule__cond_007}
\item \code{mh_p_cbcl__rule__cond_008}
\item \code{mh_p_cbcl__rule__cond_009}
\item \code{mh_p_cbcl__rule_004}
\item \code{mh_p_cbcl__rule_005}
\item \code{mh_p_cbcl__aggr__opp_001}
\item \code{mh_p_cbcl__aggr__adhd_001}
\item \code{mh_p_cbcl__aggr__cond_001}
\item \code{mh_p_cbcl__aggr_001}
\item \code{mh_p_cbcl__aggr_002}
\item \code{mh_p_cbcl__aggr__cond_002}
\item \code{mh_p_cbcl__aggr__opp_002}
\item \code{mh_p_cbcl__aggr__opp_003}
\item \code{mh_p_cbcl__aggr__cond_003}
\item \code{mh_p_cbcl__aggr__cond_004}
\item \code{mh_p_cbcl__aggr_003}
\item \code{mh_p_cbcl__aggr__opp_004}
\item \code{mh_p_cbcl__aggr_004}
\item \code{mh_p_cbcl__aggr_005}
\item \code{mh_p_cbcl__aggr_006}
\item \code{mh_p_cbcl__aggr_007}
\item \code{mh_p_cbcl__aggr__opp_005}
\item \code{mh_p_cbcl__aggr__cond_005}
}
}
}
\examples{
\dontrun{
compute_mh_p_cbcl__synd__ext_sum(data) |>
  select(
    any_of(c("mh_p_cbcl__synd__ext_sum", vars_mh_p_cbcl__synd__ext))
  )
}
}
\seealso{
\code{\link[=compute_mh_p_cbcl__synd__ext_nm]{compute_mh_p_cbcl__synd__ext_nm()}}
}
